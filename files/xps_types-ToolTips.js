NDContentPage.OnToolTipsLoaded({693:"<div class=\"NDToolTip TPackage LSQF\"><div id=\"NDPrototype693\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">_result = [_varname, _typeDef] call XPS_fnc_createEnumeration</div></div><div class=\"TTSummary\">Takes a Type Definition and creates a static helper HashmapObject with methods to hold and retrieve Enumeration objects. Can be used to perform additional operations on them as well. This function only accepts definitions of the \'enum\' type.</div></div>",907:"<div class=\"NDToolTip TClass LSQF\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype907\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\"><span class=\"Qualifier\">core.</span>&#8203;XPS_typ_Enumeration</div></div></div><div class=\"TTSummary\">TypeDefinition</div></div>",1106:"<div class=\"NDToolTip TPackage LSQF\"><div id=\"NDPrototype1106\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">_typeDefinition = [_type, _headers] call XPS_fnc_preprocessTypeDefinition</div></div><div class=\"TTSummary\">Preprocesses a Type Definition array and alters the code based on the following:</div></div>",1117:"<div class=\"NDToolTip TPackage LSQF\"><div id=\"NDPrototype1117\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">_result = [_varname, _filepath] call XPS_fnc_createStaticTypeFromFile</div></div><div class=\"TTSummary\">Reads a file containing a private Type Definition and returns a Read-Only HashmapObject.&nbsp; It then sets the missionNamespace variable name to the compileFinal\'d HashmapObject so that only one ever exists and can never be altered.</div></div>",1132:"<div class=\"NDToolTip TPackage LSQF\"><div id=\"NDPrototype1132\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">_result = [_varname, _typeDef, _args*] call XPS_fnc_createSingleton</div></div><div class=\"TTSummary\">Takes a Type Definition and creates a Static HashmapObject with a &quot;GetInstance&quot; method. This method can be used to retrieve a singleton HashmapObject which is stored in a randomized global variable. It\'s not perfectly safe nor perfectly guaranteed to NOT be overwritten maliciously. But, it\'s the closest we can get that I know of.</div></div>",1152:"<div class=\"NDToolTip TPackage LSQF\"><div id=\"NDPrototype1152\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">_typeDefinition = [_type] call XPS_fnc_buildTypeDefinition</div></div><div class=\"TTSummary\">Used to define a global declaration for a type Array (Hashmap for v2.16 onward)</div></div>",1165:"<div class=\"NDToolTip TPackage LSQF\"><div id=\"NDPrototype1165\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">_result = [_type, _interfaces] call XPS_fnc_checkInterface</div></div><div class=\"TTSummary\">Used to determine if a Hashmap or HashmapObject has the desired keys returning the desired type.</div></div>",1191:"<div class=\"NDToolTip TType LSQF\"><div class=\"TTSummary\">[1, 2, 3]</div></div>",1201:"<div class=\"NDToolTip TType LSQF\"><div class=\"TTSummary\">A Hashmap with special object-oriented features and behavior see: BI Wiki : HashMapObject</div></div>",1215:"<div class=\"NDToolTip TType LSQF\"><div class=\"TTSummary\">Array of arrays in format: [[key1,value1],[key2,value2]...]</div></div>"});